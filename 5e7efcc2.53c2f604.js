(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{145:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),b=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=b(n),m=r,d=p["".concat(i,".").concat(m)]||p[m]||s[m]||o;return n?a.a.createElement(d,l(l({ref:t},u),{},{components:n})):a.a.createElement(d,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(145)),i={id:"ci-cd",title:"CI/CD"},l={unversionedId:"features/ci-cd",id:"features/ci-cd",isDocsHomePage:!1,title:"CI/CD",description:"KintoHub provides CI/CD functionality using Github Workflows and a Custom github action.",source:"@site/docs/features/features-ci-cd.md",slug:"/features/ci-cd",permalink:"/features/ci-cd",version:"current",sidebar:"someSidebar",previous:{title:"Releases",permalink:"/features/releases"},next:{title:"Job Activity",permalink:"/features/job-history"}},c=[{value:"Usage",id:"usage",children:[{value:"Example Github Workflow :",id:"example-github-workflow-",children:[]}]}],u={toc:c};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"KintoHub provides CI/CD functionality using ",Object(o.b)("strong",{parentName:"p"},"Github Workflows")," and a ",Object(o.b)("a",{parentName:"p",href:"https://github.com/kintoproj/kinto-github-actions"},"Custom github action"),"."),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"To enable CI/CD functionality for you KintoHub services -"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Create a ",Object(o.b)("inlineCode",{parentName:"li"},"yaml")," file named ",Object(o.b)("inlineCode",{parentName:"li"},"trigger.yaml")," in ",Object(o.b)("inlineCode",{parentName:"li"},"{your-reposiory}/.github/workflows/trigger.yaml")),Object(o.b)("li",{parentName:"ul"},"Copy the contents from the example github workflow given below and replace the parameter values with your own.")),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Parameter"),Object(o.b)("th",{parentName:"tr",align:null},"Description"),Object(o.b)("th",{parentName:"tr",align:null},"Required"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"core_host"),Object(o.b)("td",{parentName:"tr",align:null},"The host address of your KintoHub instance. Should be supplied in the format ",Object(o.b)("inlineCode",{parentName:"td"},"Host:Port")),Object(o.b)("td",{parentName:"tr",align:null},"true")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"environment_id"),Object(o.b)("td",{parentName:"tr",align:null},"Environment Id of the service that you want CI/CD functionality for."),Object(o.b)("td",{parentName:"tr",align:null},"true")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"service_name"),Object(o.b)("td",{parentName:"tr",align:null},"Name of the service that you want CI/CD for."),Object(o.b)("td",{parentName:"tr",align:null},"true")))),Object(o.b)("h3",{id:"example-github-workflow-"},"Example Github Workflow :"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},"name: Trigger Deploy\non:\n  push:\n    branches: [main]\njobs:\n  trigger:\n    runs-on: ubuntu-latest\n    steps:\n      - name: trigger deploy\n        uses: kintoproj/kinto-github-actions/trigger-deploy@v1.0.0\n        with:\n          core_host: core.oss.kintohub.net:443 #replace with your own value\n          environment_id: 600f12ceb32a91c8d7b3f72d #replace with your own value\n          service_name: nodejs #replace with your own value\n")))}b.isMDXComponent=!0}}]);