(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{150:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=b(n),p=a,m=d["".concat(o,".").concat(p)]||d[p]||u[p]||l;return n?r.a.createElement(m,i(i({ref:t},s),{},{components:n})):r.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},77:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),l=(n(0),n(150)),o={id:"advanced-installation",title:"Advanced Installation"},i={unversionedId:"getting-started/advanced-installation",id:"getting-started/advanced-installation",isDocsHomePage:!1,title:"Advanced Installation",description:"This is only for users that have basic understanding on cloud infrastructure and Kubernetes.",source:"@site/docs/getting-started/advanced-installation.md",slug:"/getting-started/advanced-installation",permalink:"/getting-started/advanced-installation",version:"current",sidebar:"someSidebar",previous:{title:"Installation",permalink:"/getting-started/installation"},next:{title:"Full Stack Example",permalink:"/getting-started/fullstack-example"}},c=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Install KintoHub",id:"install-kintohub",children:[{value:"Minimum Configuration",id:"minimum-configuration",children:[]},{value:"Enable Public Access to Deployed Services",id:"enable-public-access-to-deployed-services",children:[]},{value:"Enable HTTPS support to Deployed Services",id:"enable-https-support-to-deployed-services",children:[]},{value:"Expose the Dashboard publicly",id:"expose-the-dashboard-publicly",children:[]},{value:"Install KintoHub",id:"install-kintohub-1",children:[]}]}],s={toc:c};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"This is only for users that have basic understanding on cloud infrastructure and Kubernetes.",Object(l.b)("br",{parentName:"p"}),"\n","If you are not experienced with cloud configuration, please check our ",Object(l.b)("a",{parentName:"p",href:"/getting-started/installation"},"installation guide")," instead."),Object(l.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(l.b)("p",null,"Please follow our ",Object(l.b)("a",{parentName:"p",href:"/getting-started/installation"},"installation guide")," to install ",Object(l.b)("a",{parentName:"p",href:"/getting-started/installation#install-argo-workflow"},"Argo Workflow")," and ",Object(l.b)("a",{parentName:"p",href:"/getting-started/installation##install-cert-manager"},"Cert Manager")," instead.\nIf you are not planning to support SSL certificates, please omit the installation for ",Object(l.b)("inlineCode",{parentName:"p"},"Cert Manager"),"."),Object(l.b)("h2",{id:"install-kintohub"},"Install KintoHub"),Object(l.b)("p",null,"Run the following steps depending on the setup you want.",Object(l.b)("br",{parentName:"p"}),"\n",'Each one of the following steps are "incremental", you must run all the steps prior to the setup you chose (i.e. which means you cannot skip the commands in the middle).'),Object(l.b)("p",null,"For example, you cannot run ",Object(l.b)("inlineCode",{parentName:"p"},"Enable Public Access to Deployed Services")," and ",Object(l.b)("inlineCode",{parentName:"p"},"Expose the Dashboard publicly")," without running ",Object(l.b)("inlineCode",{parentName:"p"},"Enable HTTPS support to Deployed Services"),"."),Object(l.b)("h3",{id:"minimum-configuration"},"Minimum Configuration"),Object(l.b)("p",null,"This will install KintoHub with minimum settings, which is on a local cluster with no inbound internet connection."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'export KINTO_ARGS="--set minio.resources.requests.memory=null \\\n--set minio.makeBucketJob.resources.requests.memory=null \\\n--set builder.env.IMAGE_REGISTRY_HOST={registry_host} \\\n--set builder.workflow.docker.registry={docker_registry_fqdn} \\\n--set builder.workflow.docker.email={docker_registry_email} \\\n--set builder.workflow.docker.username={docker_registry_account_username} \\\n--set builder.workflow.docker.password={docker_registry_account_password} \\\n--set common.domainName={your_domain}"\n')),Object(l.b)("h4",{id:"variables"},"Variables"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Variable"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"builder.env.IMAGE_REGISTRY_HOST")),Object(l.b)("td",{parentName:"tr",align:null},"The registry host for pushing/pulling the container images.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"builder.workflow.docker.registry")),Object(l.b)("td",{parentName:"tr",align:null},"The FQDN for your docker registry. Check ",Object(l.b)("a",{parentName:"td",href:"https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/#create-a-secret-by-providing-credentials-on-the-command-line"},"here")," for more information. (For dockerhub please use ",Object(l.b)("inlineCode",{parentName:"td"},"https://index.docker.io/v1/")," instead.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"builder.workflow.docker.email")),Object(l.b)("td",{parentName:"tr",align:null},"Your Docker email.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"builder.workflow.docker.username")),Object(l.b)("td",{parentName:"tr",align:null},"Your Docker username.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"builder.workflow.docker.password")),Object(l.b)("td",{parentName:"tr",align:null},"Your Docker password.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"common.domainName")),Object(l.b)("td",{parentName:"tr",align:null},"Your domain name used for dashboard, core and the services you are gonna deployed.")))),Object(l.b)("h3",{id:"enable-public-access-to-deployed-services"},"Enable Public Access to Deployed Services"),Object(l.b)("p",null,"Adding the following arguments will expose the web services deployed publicly."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'export KINTO_ARGS="${KINTO_ARGS} \\\n--set nginx-ingress-controller.service.type=LoadBalancer"\n')),Object(l.b)("h3",{id:"enable-https-support-to-deployed-services"},"Enable HTTPS support to Deployed Services"),Object(l.b)("p",null,"Adding the following arguments will allow KintoHub setup SSL automatically, in which guard all the services deployed with HTTPS."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'export KINTO_ARGS="${KINTO_ARGS} \\\n--set common.ssl.enabled=true \\\n--set common.ssl.issuer.email={ssl_provider_email} \\\n--set common.ssl.issuer.solver.cloudflare.email={cloudflare_email} \\\n--set common.ssl.issuer.solver.cloudflare.cloudflareApiToken={cloudflare_api_token}"\n')),Object(l.b)("h4",{id:"variables-1"},"Variables"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},"Variable"),Object(l.b)("th",{parentName:"tr",align:null},"Description"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"common.ssl.issuer.email")),Object(l.b)("td",{parentName:"tr",align:null},"Your email for the SSL certificates generated.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"common.ssl.issuer.solver.cloudflare.email")),Object(l.b)("td",{parentName:"tr",align:null},"The email of your cloudflare account.")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("inlineCode",{parentName:"td"},"common.ssl.issuer.solver.cloudflare.cloudflareApiToken")),Object(l.b)("td",{parentName:"tr",align:null},"You ",Object(l.b)("a",{parentName:"td",href:"https://support.cloudflare.com/hc/en-us/articles/200167836-Managing-API-Tokens-and-Keys#12345680"},"cloudflare API token"),".")))),Object(l.b)("h3",{id:"expose-the-dashboard-publicly"},"Expose the Dashboard publicly"),Object(l.b)("p",null,"Adding the following arguments will expose the dashboard to public. This action may considered as an insecure action, take your own risk when doing so."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},'export KINTO_ARGS="${KINTO_ARGS} \\\n--set core.ingress.enabled=true \\\n--set dashboard.ingress.enabled=true"\n')),Object(l.b)("h3",{id:"install-kintohub-1"},"Install KintoHub"),Object(l.b)("p",null,"After arguments are set, run the following commands to install KintoHub."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-sh"},"kubectl create ns kintohub\nhelm repo add kintohub https://kintoproj.github.io/kinto-helm\nhelm upgrade --install kinto \\\n              $(echo ${KINTO_ARGS}) \\\n              --namespace kintohub kintohub/kinto\n")))}b.isMDXComponent=!0}}]);